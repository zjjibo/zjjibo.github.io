<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL</title>
      <link href="/2022/04/28/SQL/"/>
      <url>/2022/04/28/SQL/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h1><h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><blockquote><p>基本语法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> `column_name`</span><br><span class="line"><span class="keyword">FROM</span> `table_name`;</span><br></pre></td></tr></table></figure><blockquote><p>使用<code>DISTINCT</code>使查询不重复<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `column_name`</span><br><span class="line"><span class="keyword">FROM</span> `table_name`</span><br></pre></td></tr></table></figure></p><p><code>SELECT WHERE</code> 语句是筛选查询很重要的操作，<code>WHERE</code> 关键字后面加上条件可以过滤掉我们不需要的信息，对查询效率有着很大的提高。<br>在使用 <code>SELECT WHERE</code> 语句检索表数据时，需要给出检索的表名 (table_name)、检索的列名 (column_name) 和操作符 (operator) 。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> `column_name1`,`column_name2`…</span><br><span class="line"><span class="keyword">FROM</span> `table_name`</span><br><span class="line"><span class="keyword">WHERE</span> `column_name` operator `<span class="keyword">value</span>`;</span><br></pre></td></tr></table></figure><ul><li>column_name 对应指定列的名称，或者是多列，用逗号（ <code>,</code> ）分隔开</li><li>table_name 对应查询表的名称</li><li><p>operator 为操作符![[sql条件运算#比较运算符]]，常用的有等于 <code>=</code> 、小于 <code>&lt;</code> 、大于 <code>&gt;</code> 、不等于<code>&lt;&gt;</code> 或 <code>!=</code>。</p><blockquote><p>select后面要输出的信息如果是全部信息就跟*就可以， from后都是跟上来自哪个表 where就是后面跟的就是条件，记得非数字的加上单引号就可以了。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span><span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> courses</span><br><span class="line"><span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;Artificial Intelligence&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h2><blockquote><p><strong>INSERT INTO</strong> 语句用于向表中插入新记录，这边介绍两种编写形式，第一种形式无需指定列名，第二种形式需要指定列名。</p></blockquote><h3 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h3><blockquote><p>第一种形式，<code>不需要指定列名</code>。只需提供插入的数据即可。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `table_name`</span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, value3,...);</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `courses` <span class="keyword">VALUES</span> (<span class="number">13</span>,<span class="string">&#x27;Python&#x27;</span>,<span class="string">&#x27;400&#x27;</span>,<span class="string">&#x27;2021-05-23&#x27;</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h3 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h3><blockquote><p>这种形式需要指定列名，语法如下：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `table_name`</span><br><span class="line">(`column1`, `column2`, `column3`,...)</span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, value3,...);</span><br></pre></td></tr></table></figure><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `courses` (`name`, `student_count`, `created_at`, `teacher_id`) <span class="keyword">VALUES</span> (<span class="string">&#x27;Flash Sale&#x27;</span>,<span class="string">&#x27;100&#x27;</span>,<span class="string">&#x27;2018-01-01&#x27;</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><blockquote><p>基本语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `table_name`</span><br><span class="line"><span class="keyword">SET</span> `column1`<span class="operator">=</span>value1,`column2`<span class="operator">=</span>value2,...</span><br><span class="line"><span class="keyword">WHERE</span> `some_column`<span class="operator">=</span>some_value;</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `teachers`</span><br><span class="line"><span class="keyword">SET</span> `email` <span class="operator">=</span> <span class="string">&#x27;LinghuChong@lintcode.com&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> `name` <span class="operator">=</span> <span class="string">&#x27;Linghu Chong&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><blockquote><p>基本语法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `table_name`</span><br><span class="line"><span class="keyword">WHERE</span> `some_column` <span class="operator">=</span> `some_value`;</span><br></pre></td></tr></table></figure><h4 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `courses` <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;Dynamic Programming&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> courses;</span><br></pre></td></tr></table></figure><h4 id="delete和truncate的区别"><a href="#delete和truncate的区别" class="headerlink" title="delete和truncate的区别"></a>delete和truncate的区别</h4><p>1、在功能上，truncate是清空一个表的内容，它相当于delete from table_name。<br>2、delete是dml操作，truncate是ddl操作；因此，用delete删除整个表的数据时，会产生大量的roolback，占用很多的rollback segments， 而truncate不会。<br>3、在内存中，用delete删除数据，表空间中其被删除数据的表占用的空间还在，便于以后的使用，另外它是“假相”的删除，相当于windows中用delete删除数据是把数据放到回收站中，还可以恢复，当然如果这个时候重新启动系统（OS或者RDBMS），它也就不能恢复了！<br>而用truncate清除数据，内存中表空间中其被删除数据的表占用的空间会被立即释放，相当于windows中用shift+delete删除数据，不能够恢复！<br>4、truncate 调整high water mark 而delete不；truncate之后，TABLE的HWM退回到 INITIAL和NEXT的位置（默认）delete 则不可以。<br>5、truncate 只能对TABLE，delete 可以是table,view,synonym。<br>6、TRUNCATE TABLE 的对象必须是本模式下的，或者有drop any table的权限 而 DELETE 则是对象必须是本模式下的，或被授予 DELETE ON SCHEMA.TABLE 或DELETE ANY TABLE的权限。<br>7、在外层中，truncate或者delete后，其占用的空间都将释放。<br>8、truncate和delete只删除数据，而drop则删除整个表（结构和数据）。</p><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><p>1.TRUNCATE TABLE是非常快的<br>2.TRUNCATE之后的自增字段从头开始计数了，而DELETE的仍保留原来的最大数值 </p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/28/hello-world/"/>
      <url>/2022/04/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
