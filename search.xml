<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84MySQL%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF(%E4%B8%80)/"/>
      <url>/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84MySQL%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h2 id="张三的MySQL学习之路-一"><a href="#张三的MySQL学习之路-一" class="headerlink" title="张三的MySQL学习之路(一)"></a>张三的MySQL学习之路(一)</h2><p>2022-04-23</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>描述</p><p>张三最近对 <code>MySQL</code> 数据库感兴趣，决定要好好学习数据库，但…学习的道路总是充满艰辛的。张三今天遇到了一个难题，他左思右想、苦思冥想、茶不思饭不想也没能想出解决办法。情况是这样的，现有 <code>teachers</code> 表中记录着离职的教师信息，<code>id</code> 的值即是教师离职的顺序，在 <code>courses</code> 表中记录着每个教师教授的课程信息，关联 id 为 <code>teacher_id</code>。<strong>现在知道教师是以国籍来分团队的，且每个团队的成立至少有 <code>3</code> 个教师，若是一个教师团队集体离职，则在 <code>teachers</code> 表中信息记录为连续且国籍相同，现在需要统计每一个教师团队集体离职会有多少学生需要等待新的教师，结果按团队国籍排序</strong>。他需要创建一个视图 <code>v_courses_teachers</code> 来解决这个问题，同学们快来帮帮张三小伙子吧 ~</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> v_courses_teachers <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> tt.country,<span class="built_in">sum</span>(tt.student_count) student_count</span><br><span class="line">    <span class="keyword">from</span> (</span><br><span class="line">        <span class="keyword">select</span> <span class="keyword">distinct</span> t1.id,t1.country,c.student_count</span><br><span class="line">        <span class="keyword">from</span> teachers t1 <span class="keyword">left</span> <span class="keyword">join</span> teachers t2</span><br><span class="line">        <span class="keyword">on</span> t1.id<span class="operator">=</span>t2.id<span class="number">-1</span> <span class="keyword">or</span> t1.id<span class="operator">=</span>t2.id<span class="operator">+</span><span class="number">1</span></span><br><span class="line">        <span class="keyword">left</span> <span class="keyword">join</span> courses c <span class="keyword">on</span> t1.id<span class="operator">=</span>c.teacher_id</span><br><span class="line">        <span class="keyword">where</span> t1.country<span class="operator">=</span>t2.country</span><br><span class="line">    ) tt</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> tt.country</span><br><span class="line">    <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">2</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>join是将表链接在源表后，<code>t1.id=t2.id-1 or t1.id=t2.id+1</code>会出现最多三行</li><li>group除了分组列，其他列可能包含多个值，容易BUG</li></ul><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="https://www.lintcode.com/learn/130/664">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84MySQL%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84MySQL%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="张三的MySQL学习之路（三）"><a href="#张三的MySQL学习之路（三）" class="headerlink" title="张三的MySQL学习之路（三）"></a>张三的MySQL学习之路（三）</h2><p>2022-04-23</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>描述</p><p>张三在宿舍里打游戏，今天运气不太好，总是被匹配的队友坑，气得张三直接就把游戏给卸载了。没心情去吃饭的张三打开 QQ，发现有 999+ 的信息，原来是学校的老师给他发来的消息，想要他帮忙创建一个 SQL 视图 <code>v_best_teachers</code>，要他赶紧写好发过去。张三看了看需求，边看要求边写 SQL，结果发现…不对！<strong>学校的要求是查出每个国家最受欢迎的老师信息（听课学生数越多越受欢迎），并按国籍升序排序</strong>。现在张三在知识分享过程中，拿这道题来考你，并嘲讽你不能做出来……小伙子，打脸张三的时候到了，还在等什么 ？冲</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_best_teachers</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> teacher_id, student_count, country, email</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span> teacher_id, <span class="built_in">sum</span>(student_count) student_count, country, email</span><br><span class="line">    <span class="keyword">from</span> courses c </span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">join</span> teachers t </span><br><span class="line">    <span class="keyword">on</span> c.teacher_id <span class="operator">=</span> t.id</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> teacher_id, country, email) a</span><br><span class="line"><span class="keyword">where</span> (student_count, country) <span class="keyword">in</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">max</span>(student_count), country</span><br><span class="line">    <span class="keyword">from</span>(</span><br><span class="line">        <span class="keyword">select</span> teacher_id, <span class="built_in">sum</span>(student_count) student_count, country, email</span><br><span class="line">        <span class="keyword">from</span> courses c </span><br><span class="line">        <span class="keyword">inner</span> <span class="keyword">join</span> teachers t </span><br><span class="line">        <span class="keyword">on</span> c.teacher_id <span class="operator">=</span> t.id</span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span> teacher_id, country, email) aa</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> country)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> country;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> if <span class="keyword">exists</span> v_best_teachers;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> v_best_teachers  <span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> teacher_id,student_count,country,email</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> id <span class="keyword">as</span> teacher_id,<span class="built_in">max</span>(student_count) <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> country ) <span class="keyword">as</span> student_count_1,country,email</span><br><span class="line">    ,student_count</span><br><span class="line">    <span class="keyword">from</span> (</span><br><span class="line">        <span class="keyword">select</span> a.id, email,country,<span class="built_in">sum</span>(student_count)</span><br><span class="line">        <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> a.id,country) <span class="keyword">as</span> student_count</span><br><span class="line">        <span class="keyword">from</span> teachers a</span><br><span class="line">        <span class="keyword">inner</span> <span class="keyword">join</span> courses b </span><br><span class="line">        <span class="keyword">on</span> a.id <span class="operator">=</span> b.teacher_id </span><br><span class="line">        ) t </span><br><span class="line">    ) tt </span><br><span class="line"><span class="keyword">where</span> tt.student_count_1 <span class="operator">=</span>tt.student_count</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> country</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_best_teachers <span class="keyword">as</span>(</span><br><span class="line"><span class="keyword">select</span> ct.teacher_id <span class="keyword">as</span> teacher_id,</span><br><span class="line">ct.s_student_count <span class="keyword">as</span> student_count,</span><br><span class="line">ct.country <span class="keyword">as</span> country,</span><br><span class="line">ct.email <span class="keyword">as</span> email</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> c.teacher_id,c.s_student_count,t.country,t.email,</span><br><span class="line"><span class="built_in">rank</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> country <span class="keyword">order</span> <span class="keyword">by</span> s_student_count <span class="keyword">desc</span>) <span class="keyword">as</span> orde</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line"><span class="keyword">select</span> teacher_id,<span class="built_in">sum</span>(student_count) <span class="keyword">as</span> s_student_count <span class="keyword">from</span> courses</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> teacher_id</span><br><span class="line">) <span class="keyword">as</span> c</span><br><span class="line"><span class="keyword">join</span> teachers t </span><br><span class="line"><span class="keyword">on</span> c.teacher_id<span class="operator">=</span>t.id) <span class="keyword">as</span> ct</span><br><span class="line"><span class="keyword">where</span> ct.orde<span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> country</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>注意<code>join</code>中数据的重复次数，会造成数据出现重复。</li><li>聚合函数要和<code>group by</code>联用，mysql要去by后面为全select关键词，即除了聚合函数。</li></ul><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="https://www.lintcode.com/learn/153/683">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84MySQL%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF(%E4%BA%8C)/"/>
      <url>/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84MySQL%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h2 id="张三的MySQL学习之路（二）"><a href="#张三的MySQL学习之路（二）" class="headerlink" title="张三的MySQL学习之路（二）"></a>张三的MySQL学习之路（二）</h2><p>2022-04-23</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>描述<br>张三曾经有一个梦想，想要听遍学校里的每一位教师的课程，于是写了一个视图 <code>v_mydream</code> 展示了所有的课程与授课教师的信息，并按教师姓名升序去实现，但是张三发现课程实在是太多太多，梦想需要改一改，于是他把梦想改成了去听<strong>每一位教师最受欢迎的课程（听课学生越多越受欢迎，如果该教师没有教授课程则课程与学生数显示为 <code>NULL</code>）</strong>，学校也非常支持他，听说他最近在学 <code>MySQL</code>，就给了他 <code>2</code> 张表的数据让他自己去找，<code>teachers</code> 表中记录着教师的信息，<code>courses</code> 表中记录着课程信息。张三一看，“ 哇~ 这也太简单了，感谢学校大大提供的数据 ”，可是他正要把原来的梦想视图改写，就发现李四从旁边过。李四肚子饿的呱呱叫，看到张三就问要不要一起去吃饭，张三灵光一闪，“ 这么巧~ 我也打算去吃饭，但是现在我这里有一个很简单的问题，你帮我解决了我就请你吃饭 ”，李四一听还有这等好事，立马答应下来了，结果发现不会。为了不掉面子并且能吃上一顿，就偷偷联系了你，请求你帮他解决。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_mydream <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> teacher_name,course_name,student_count</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">     <span class="keyword">select</span> t.name teacher_name,c.name course_name,student_count,</span><br><span class="line">     <span class="built_in">rank</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> t.id <span class="keyword">order</span> <span class="keyword">by</span> student_count <span class="keyword">desc</span>) num</span><br><span class="line">     <span class="keyword">from</span> teachers t</span><br><span class="line">     <span class="keyword">left</span> <span class="keyword">join</span> courses c</span><br><span class="line">     <span class="keyword">on</span> t.id<span class="operator">=</span>c.teacher_id</span><br><span class="line">) tt</span><br><span class="line"><span class="keyword">where</span> tt.num<span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> teacher_name;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ol><li><code>DENSE_RANK()</code> 函数的语法如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> (</span><br><span class="line">    <span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>expression<span class="operator">&gt;</span>[&#123;,<span class="operator">&lt;</span>expression<span class="operator">&gt;</span>...&#125;]</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>expression<span class="operator">&gt;</span> [<span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>], [&#123;,<span class="operator">&lt;</span>expression<span class="operator">&gt;</span>...&#125;]</span><br><span class="line">)</span><br></pre></td></tr></table></figure>在这个语法中：</li></ol><ul><li>首先，<code>PARTITION BY</code>子句将<code>FROM</code>子句生成的结果集划分为分区。<code>DENSE_RANK()</code>函数应用于每个分区。</li><li>其次，<code>ORDER BY</code>  子句指定<code>DENSE_RANK()</code>函数操作的每个分区中的行顺序。<br>如果分区具有两个或更多具有相同排名值的行，则将为这些行中的每一行分配相同的排名。<br>与<a href="https://zhuanlan.zhihu.com/p/133469603#:~:text=%E5%85%88%E4%B8%8A%E7%BB%93%E8%AE%BA%EF%BC%8C%E4%B8%89%E8%80%85%E7%9A%84%E5%8C%BA%E5%88%AB%E5%A6%82%E4%B8%8B%EF%BC%9A%20rank,%28%29%E6%8E%92%E5%BA%8F%E7%9B%B8%E5%90%8C%E6%97%B6%E4%BC%9A%E9%87%8D%E5%A4%8D%EF%BC%8C%E6%80%BB%E6%95%B0%E4%B8%8D%E5%8F%98%EF%BC%8C%E5%8D%B3%E4%BC%9A%E5%87%BA%E7%8E%B01%E3%80%811%E3%80%813%E8%BF%99%E6%A0%B7%E7%9A%84%E6%8E%92%E5%BA%8F%E7%BB%93%E6%9E%9C%EF%BC%9B%20dense_rank%20%28%29%E6%8E%92%E5%BA%8F%E7%9B%B8%E5%90%8C%E6%97%B6%E4%BC%9A%E9%87%8D%E5%A4%8D%EF%BC%8C%E6%80%BB%E6%95%B0%E4%BC%9A%E5%87%8F%E5%B0%91%EF%BC%8C%E5%8D%B3%E4%BC%9A%E5%87%BA%E7%8E%B01%E3%80%811%E3%80%812%E8%BF%99%E6%A0%B7%E7%9A%84%E6%8E%92%E5%BA%8F%E7%BB%93%E6%9E%9C%EF%BC%9B">Rank</a><code>函数不同，</code>DENSE_RANK()`函数始终返回连续的排名值。<br>eee<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sales;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------+--------+</span></span><br><span class="line"><span class="operator">|</span> sales_employee <span class="operator">|</span> fiscal_year <span class="operator">|</span> sale   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------+--------+</span></span><br><span class="line"><span class="operator">|</span> Alice          <span class="operator">|</span>        <span class="number">2016</span> <span class="operator">|</span> <span class="number">150.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Alice          <span class="operator">|</span>        <span class="number">2017</span> <span class="operator">|</span> <span class="number">100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Alice          <span class="operator">|</span>        <span class="number">2018</span> <span class="operator">|</span> <span class="number">200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Bob            <span class="operator">|</span>        <span class="number">2016</span> <span class="operator">|</span> <span class="number">100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Bob            <span class="operator">|</span>        <span class="number">2017</span> <span class="operator">|</span> <span class="number">150.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Bob            <span class="operator">|</span>        <span class="number">2018</span> <span class="operator">|</span> <span class="number">200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> John           <span class="operator">|</span>        <span class="number">2016</span> <span class="operator">|</span> <span class="number">200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> John           <span class="operator">|</span>        <span class="number">2017</span> <span class="operator">|</span> <span class="number">150.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> John           <span class="operator">|</span>        <span class="number">2018</span> <span class="operator">|</span> <span class="number">250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------+--------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    sales_employee,</span><br><span class="line">    fiscal_year,</span><br><span class="line">    sale,</span><br><span class="line">    <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span></span><br><span class="line">                     fiscal_year</span><br><span class="line">                 <span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">                     sale <span class="keyword">DESC</span></span><br><span class="line">                ) sales_rank</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    sales;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------+--------+------------+</span></span><br><span class="line"><span class="operator">|</span> sales_employee <span class="operator">|</span> fiscal_year <span class="operator">|</span> sale   <span class="operator">|</span> sales_rank <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------+--------+------------+</span></span><br><span class="line"><span class="operator">|</span> John           <span class="operator">|</span>        <span class="number">2016</span> <span class="operator">|</span> <span class="number">200.00</span> <span class="operator">|</span>          <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Alice          <span class="operator">|</span>        <span class="number">2016</span> <span class="operator">|</span> <span class="number">150.00</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Bob            <span class="operator">|</span>        <span class="number">2016</span> <span class="operator">|</span> <span class="number">100.00</span> <span class="operator">|</span>          <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Bob            <span class="operator">|</span>        <span class="number">2017</span> <span class="operator">|</span> <span class="number">150.00</span> <span class="operator">|</span>          <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> John           <span class="operator">|</span>        <span class="number">2017</span> <span class="operator">|</span> <span class="number">150.00</span> <span class="operator">|</span>          <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Alice          <span class="operator">|</span>        <span class="number">2017</span> <span class="operator">|</span> <span class="number">100.00</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> John           <span class="operator">|</span>        <span class="number">2018</span> <span class="operator">|</span> <span class="number">250.00</span> <span class="operator">|</span>          <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Alice          <span class="operator">|</span>        <span class="number">2018</span> <span class="operator">|</span> <span class="number">200.00</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Bob            <span class="operator">|</span>        <span class="number">2018</span> <span class="operator">|</span> <span class="number">200.00</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------+--------+------------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>在这个例子中：</p><ul><li>首先，<code>PARTITION BY</code>子句使用会计年度将结果集划分为分区。</li><li>其次，<code>ORDER BY</code>条款按销售额的降序指定了销售员工的顺序。</li><li>第三，<code>DENSE_RANK()</code>函数应用于具有<code>ORDER BY</code>子句指定的行顺序的每个分区。</li></ul><p><code>rank()/dense_rank()/row_number()的区别：</code></p><ul><li>rank()排序相同时会重复，总数不变，即会出现1、1、3这样的排序结果；</li><li>dense_rank()排序相同时会重复，总数会减少，即会出现1、1、2这样的排序结果；</li><li>row_number()排序相同时不会重复，会根据顺序排序。<h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><a href="https://www.lintcode.com/learn/132/668">source</a><br><a href="https://www.begtut.com/mysql/mysql-dense_rank-function.html">DENSE_RANK</a><br><a href="https://blog.csdn.net/qq_44690947/article/details/109133592">max()与group by()</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84%20MySQL%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E5%9B%9B/"/>
      <url>/2022/04/28/%E5%BC%A0%E4%B8%89%E7%9A%84%20MySQL%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="张三的-MySQL-学习之路（四"><a href="#张三的-MySQL-学习之路（四" class="headerlink" title="张三的 MySQL 学习之路（四"></a>张三的 MySQL 学习之路（四</h2><p>2022-04-24</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>描述<br>“今晚的月色真美啊~ ”，张三一个人在赏月，这美妙的时刻也只有在学习结束后才能感受到，今天张三刚开始学存储过程，他发现这是一个好东西啊，学完之后再赏个月真是美滋滋。这时候，某教师给他打了一个电话，直接就毁了他这个美妙的夜晚。某教师说帮他整个活，系里现在准备年轻化、活力化教师团队，<strong>上多门课（至少 2 门课）的教师就是活跃教师</strong>，但是现在教师中有些年轻人啊喜欢偷懒，只上 1 门课或是不上课，于是要<strong>将活跃教师中年龄最大的教师所教授的课程全部交给不活跃教师中最年轻的教师（如果年龄相同就按姓名顺序），直到整个教师团队显得更年轻化、活力化，而这个标准就是活跃教师的平均年龄要求不能大于全体教师的平均年龄</strong>，而且这个工作会定期做的，由于业务繁忙，然后丢给张三 2 张表让张三帮他做，<code>teachers</code> 表记录着教师的信息，和 <code>courses</code> 表记录着课程信息，关联 <code>id</code> 为 <code>teacher_id</code>。张三本不想接这个活，但是突然灵光一闪就答应了，谈妥条件以后，张三回头就用存储过程给他写出来了并且不告诉某教师。教师听说张三并不是手动给他做的，于是想要挖出张三是怎么做的，通过打听只知道是用了存储过程，作为教师，我当然要自己写了，怎么能让张三那小子拿好处？小伙子，快来复现一下这个存储过程吧</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> youngTeachers ()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">declare</span> oldt <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;<span class="comment">--最大年龄教师</span></span><br><span class="line">     <span class="keyword">declare</span> tid <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;<span class="comment">--不活跃且最年轻</span></span><br><span class="line">     <span class="keyword">declare</span> actnum <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;<span class="comment">--活跃的平均年龄</span></span><br><span class="line">     <span class="keyword">declare</span> notactnum <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;<span class="comment">--平均年龄</span></span><br><span class="line">     loop1:loop</span><br><span class="line">          <span class="comment">--活跃教师的平均年龄</span></span><br><span class="line">          <span class="keyword">select</span> <span class="built_in">avg</span>(age) <span class="keyword">into</span> actnum <span class="keyword">from</span> teachers t</span><br><span class="line">          <span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> teacher_id,<span class="built_in">count</span>(<span class="operator">*</span>) num <span class="keyword">from</span> courses <span class="keyword">group</span> <span class="keyword">by</span> teacher_id) <span class="keyword">as</span> c</span><br><span class="line">          <span class="keyword">on</span> t.id<span class="operator">=</span>c.teacher_id</span><br><span class="line">          <span class="keyword">where</span> c.num<span class="operator">&gt;</span><span class="number">1</span>;</span><br><span class="line">          <span class="comment">--所有老师的平均年龄</span></span><br><span class="line">          <span class="keyword">select</span> <span class="built_in">avg</span>(age) <span class="keyword">into</span> notactnum <span class="keyword">from</span> teachers;</span><br><span class="line">          <span class="comment">--判断年龄是否符合要求</span></span><br><span class="line">          if actnum<span class="operator">&lt;=</span>notactnum <span class="keyword">then</span></span><br><span class="line">               leave loop1;</span><br><span class="line">          <span class="keyword">end</span> if;</span><br><span class="line">          <span class="comment">--找出年龄最大的老师</span></span><br><span class="line">          <span class="keyword">select</span> t.id <span class="keyword">into</span> oldt <span class="keyword">from</span> (<span class="keyword">select</span> teacher_id,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> num <span class="keyword">from</span> courses <span class="keyword">group</span> <span class="keyword">by</span> teacher_id) <span class="keyword">as</span> c</span><br><span class="line">          <span class="keyword">left</span> <span class="keyword">join</span> teachers t</span><br><span class="line">          <span class="keyword">on</span> t.id<span class="operator">=</span>c.teacher_id</span><br><span class="line">          <span class="keyword">where</span> c.num<span class="operator">&gt;</span><span class="number">1</span></span><br><span class="line">          <span class="keyword">order</span> <span class="keyword">by</span> t.age <span class="keyword">desc</span></span><br><span class="line">          limit <span class="number">1</span>;</span><br><span class="line">          <span class="comment">--找出不活跃教师中最年轻的老师</span></span><br><span class="line">          <span class="keyword">select</span> t.id <span class="keyword">into</span> tid</span><br><span class="line">          <span class="keyword">from</span> teachers t</span><br><span class="line">          <span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> teacher_id,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> num <span class="keyword">from</span> courses <span class="keyword">group</span> <span class="keyword">by</span> teacher_id) <span class="keyword">as</span> c</span><br><span class="line">          <span class="keyword">on</span> t.id<span class="operator">=</span>c.teacher_id</span><br><span class="line">          <span class="keyword">where</span> c.num<span class="operator">&lt;=</span><span class="number">1</span> <span class="keyword">or</span> c.num <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line">          <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span>,t.name <span class="keyword">asc</span></span><br><span class="line">          limit <span class="number">1</span>;</span><br><span class="line">          <span class="comment">--更新数据</span></span><br><span class="line">          <span class="keyword">update</span> courses</span><br><span class="line">          <span class="keyword">set</span> teacher_id<span class="operator">=</span>tid <span class="keyword">where</span> teacher_id<span class="operator">=</span>oldt;</span><br><span class="line">     <span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">call</span> youngTeachers();</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>[[存储过程]]</li><li>sql循环过程![[存储过程#循环语句]]</li></ul><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="https://www.lintcode.com/problem/2800/description">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E4%BF%AE%E5%A4%8D%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%90%8D%E5%AD%97/"/>
      <url>/2022/04/28/%E4%BF%AE%E5%A4%8D%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%90%8D%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h2 id="修复表中的名字"><a href="#修复表中的名字" class="headerlink" title="修复表中的名字"></a>修复表中的名字</h2><p>2022-04-24</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span> Name    <span class="operator">|</span> Type    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+</span></span><br><span class="line"><span class="operator">|</span> user_id        <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name           <span class="operator">|</span> <span class="type">varchar</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+</span></span><br><span class="line">user_id 是该表的主键。</span><br><span class="line">该表包含用户的 ID 和名字。名字仅由小写和大写字符组成。</span><br></pre></td></tr></table></figure><p>编写一个 SQL 查询来修复名字，使得只有第一个字符是大写的，其余都是小写的。</p><p>返回按 <code>user_id</code> 排序的结果表。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> user_id,concat(<span class="built_in">upper</span>(<span class="keyword">left</span>(name,<span class="number">1</span>)),<span class="built_in">lower</span>(substr(name,<span class="number">2</span>))) name</span><br><span class="line"><span class="keyword">from</span> Users</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> user_id;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>字符串处理函数<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;My&#x27;</span>,<span class="string">&#x27;S&#x27;</span>,<span class="string">&#x27;QL&#x27;</span>)</span><br><span class="line"><span class="comment">--&#x27;MySQL&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(<span class="string">&#x27;foobarbar&#x27;</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment">--&#x27;fooba&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(<span class="string">&#x27;QUADRATICALLY&#x27;</span>)</span><br><span class="line"><span class="comment">--&#x27;quadratically&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">substring</span>(<span class="string">&#x27;Quadratically&#x27;</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment">--&#x27;ratically&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;Hej&#x27;</span>)</span><br><span class="line"><span class="comment">--&#x27;HEJ&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><a href="https://leetcode-cn.com/problems/fix-names-in-a-table/">source</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E6%A0%91%E8%8A%82%E7%82%B9/"/>
      <url>/2022/04/28/%E6%A0%91%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="树节点"><a href="#树节点" class="headerlink" title="树节点"></a>树节点</h2><p>2022-04-25</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>给定一个表 <code>tree</code>，<strong>id</strong> 是树节点的编号， <strong>p_id</strong> 是它父节点的 <strong>id 。</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> p_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> <span class="keyword">null</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>  <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>  <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>  <span class="operator">|</span> <span class="number">2</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>  <span class="operator">|</span> <span class="number">2</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br></pre></td></tr></table></figure><br>树中每个节点属于以下三种类型之一：</p><pre><code>叶子：如果这个节点没有任何孩子节点。根：如果这个节点是整棵树的根，即没有父节点。内部节点：如果这个节点既不是叶子节点也不是根节点。</code></pre><p>写一个查询语句，输出所有节点的编号和节点的类型，并将结果按照节点编号排序。上面样例的结果为：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> Type <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> Root <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>  <span class="operator">|</span> <span class="keyword">Inner</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>  <span class="operator">|</span> Leaf <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>  <span class="operator">|</span> Leaf <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>  <span class="operator">|</span> Leaf <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br></pre></td></tr></table></figure></p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--first version</span></span><br><span class="line"><span class="keyword">select</span> id,Type <span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> id,<span class="string">&#x27;Root&#x27;</span> type <span class="keyword">from</span> tree <span class="keyword">where</span> p_id <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    <span class="keyword">select</span> id,<span class="string">&#x27;Inner&#x27;</span> type <span class="keyword">from</span> tree <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> p_id <span class="keyword">from</span> tree <span class="keyword">where</span> p_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> p_id<span class="operator">!=</span>(<span class="keyword">select</span> id <span class="keyword">from</span> tree <span class="keyword">where</span> p_id <span class="keyword">is</span> <span class="keyword">null</span>))</span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    <span class="keyword">select</span> id,<span class="string">&#x27;Leaf&#x27;</span> type <span class="keyword">from</span> tree <span class="keyword">where</span> id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> p_id <span class="keyword">from</span> tree <span class="keyword">where</span> p_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>)</span><br><span class="line">) ee</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> id;</span><br><span class="line"><span class="comment">--answer</span></span><br><span class="line"># 根结点: 没有父节点</span><br><span class="line"><span class="keyword">SELECT</span> ID, <span class="string">&#x27;Root&#x27;</span> <span class="keyword">AS</span> TYPE </span><br><span class="line"><span class="keyword">FROM</span> TREE <span class="keyword">AS</span> T </span><br><span class="line"><span class="keyword">WHERE</span> P_ID <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"># 中间节点: 担任父节点 并且 不是根节点</span><br><span class="line"><span class="keyword">SELECT</span> ID, <span class="string">&#x27;Inner&#x27;</span> <span class="keyword">AS</span> TYPE</span><br><span class="line"><span class="keyword">FROM</span> TREE <span class="keyword">AS</span> T </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">ID <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> P_ID <span class="keyword">FROM</span> TREE <span class="keyword">WHERE</span> P_ID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line"><span class="keyword">AND</span></span><br><span class="line">(P_ID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"># 叶子结点: 不担任父节点 并且 不是根节点</span><br><span class="line"># 注意:这里还需限制“不是根节点” 是因为当树只有一个节点的时候 根节点也不担任父节点 </span><br><span class="line"># 注意:ID <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> P_ID <span class="keyword">FROM</span> TREE <span class="keyword">WHERE</span> P_ID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)里面要限制P_ID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line"># 否则<span class="keyword">SELECT</span>出来的结果里面有<span class="keyword">NULL</span> 这句话返回空列表 (我也不太明白为什么)</span><br><span class="line"><span class="keyword">SELECT</span> ID, <span class="string">&#x27;Leaf&#x27;</span> <span class="keyword">AS</span> TYPE</span><br><span class="line"><span class="keyword">FROM</span> TREE <span class="keyword">AS</span> T </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">ID <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> P_ID <span class="keyword">FROM</span> TREE <span class="keyword">WHERE</span> P_ID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line"><span class="keyword">AND</span></span><br><span class="line">(P_ID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">id,</span><br><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> p_id <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;Root&#x27;</span></span><br><span class="line"> <span class="keyword">WHEN</span> id <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> p_id <span class="keyword">from</span> tree) <span class="keyword">then</span> <span class="string">&#x27;Inner&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;Leaf&#x27;</span> <span class="keyword">end</span> <span class="keyword">as</span> type</span><br><span class="line"><span class="keyword">from</span> tree;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1/"/>
      <url>/2022/04/28/%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="删除重复的电子邮箱"><a href="#删除重复的电子邮箱" class="headerlink" title="删除重复的电子邮箱"></a>删除重复的电子邮箱</h2><p>2022-04-23</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span> Name <span class="operator">|</span> Type    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> email       <span class="operator">|</span> <span class="type">varchar</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line">id是该表的主键列。</span><br><span class="line">该表的每一行包含一封电子邮件。电子邮件将不包含大写字母。</span><br></pre></td></tr></table></figure><p>编写一个 SQL <strong>删除语句</strong>来 <strong>删除</strong> 所有重复的电子邮件，只保留一个id最小的唯一电子邮件。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> p1 <span class="keyword">from</span> Person p1,Person p2</span><br><span class="line"><span class="keyword">where</span> p1.email<span class="operator">=</span>p2.email <span class="keyword">and</span> p1.id<span class="operator">&gt;</span>p2.id;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>delete可以写成<code>delete table1 from table1,table2 where ……</code>![[SQL基础#DELETE|delete]]</li></ul><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="https://leetcode-cn.com/problems/delete-duplicate-emails/">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E6%AF%8F%E4%B8%AA%E4%BA%A7%E5%93%81%E5%9C%A8%E4%B8%8D%E5%90%8C%E5%95%86%E5%BA%97%E7%9A%84%E4%BB%B7%E6%A0%BC/"/>
      <url>/2022/04/28/%E6%AF%8F%E4%B8%AA%E4%BA%A7%E5%93%81%E5%9C%A8%E4%B8%8D%E5%90%8C%E5%95%86%E5%BA%97%E7%9A%84%E4%BB%B7%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="每个产品在不同商店的价格"><a href="#每个产品在不同商店的价格" class="headerlink" title="每个产品在不同商店的价格"></a>每个产品在不同商店的价格</h2><p>2022-04-25</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>表：<code>Products</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span> Name <span class="operator">|</span> Type    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> product_id  <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> store1      <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> store2      <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> store3      <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line">这张表的主键是product_id（产品Id）。</span><br><span class="line">每行存储了这一产品在不同商店store1, store2, store3的价格。</span><br><span class="line">如果这一产品在商店里没有出售，则值将为<span class="keyword">null</span>。</span><br></pre></td></tr></table></figure><br>请你重构 Products 表，查询每个产品在不同商店的价格，使得输出的格式变为(product_id, store, price) 。如果这一产品在商店里没有出售，则不输出这一行。</p><p>输出结果表中的 顺序不作要求 。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> product_id,store,price <span class="keyword">from</span>(</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> product_id,<span class="string">&#x27;store1&#x27;</span> store,store1 price <span class="keyword">from</span> Products</span><br><span class="line">    <span class="comment">--where store1 is not null</span></span><br><span class="line">    <span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line">    <span class="keyword">select</span> product_id,<span class="string">&#x27;store2&#x27;</span> store,store2 price <span class="keyword">from</span> Products</span><br><span class="line">    <span class="comment">--where store2 is not null</span></span><br><span class="line">    <span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line">    <span class="keyword">select</span> product_id,<span class="string">&#x27;store3&#x27;</span> store,store3 price <span class="keyword">from</span> Products</span><br><span class="line">    <span class="comment">--where store3 is not null</span></span><br><span class="line">) ee</span><br><span class="line"><span class="keyword">where</span> price <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>设置常量列<code>select &#39;a&#39; coloum</code></li><li>行转列常用<code>case when</code>和<code>union all</code><br><img src="https://pic.leetcode-cn.com/1627441221-KvsJUP-%E6%9C%AA%E5%91%BD%E5%90%8D%E5%9B%BE%E7%89%87.png" alt="object"></li></ul><p><strong>行转列——MAX/SUM+CASE WHEN+GROUP BY</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,</span><br><span class="line">  <span class="built_in">MAX</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> subject<span class="operator">=</span><span class="string">&#x27;语文&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;语文&quot;,</span><br><span class="line">  <span class="built_in">MAX</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> subject<span class="operator">=</span><span class="string">&#x27;数学&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;数学&quot;,</span><br><span class="line">  <span class="built_in">MAX</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> subject<span class="operator">=</span><span class="string">&#x27;英语&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;英语&quot;</span><br><span class="line"><span class="keyword">FROM</span> student1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> name</span><br></pre></td></tr></table></figure></p><p><strong>列转行——MAX+UNION+GROUP BY</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME,<span class="string">&#x27;语文&#x27;</span> <span class="keyword">AS</span> subject,<span class="built_in">MAX</span>(&quot;语文&quot;) <span class="keyword">AS</span> score</span><br><span class="line"><span class="keyword">FROM</span> student2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> NAME</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> NAME,<span class="string">&#x27;数学&#x27;</span> <span class="keyword">AS</span> subject,<span class="built_in">MAX</span>(&quot;数学&quot;) <span class="keyword">AS</span> score</span><br><span class="line"><span class="keyword">FROM</span> student2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> NAME</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> NAME,<span class="string">&#x27;英语&#x27;</span> <span class="keyword">AS</span> subject,<span class="built_in">MAX</span>(&quot;英语&quot;) <span class="keyword">AS</span> score</span><br><span class="line"><span class="keyword">FROM</span> student2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> NAME</span><br></pre></td></tr></table></figure></p><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E8%BF%9B%E5%BA%97%E5%8D%B4%E6%9C%AA%E8%BF%9B%E8%A1%8C%E8%BF%87%E4%BA%A4%E6%98%93%E7%9A%84%E9%A1%BE%E5%AE%A2/"/>
      <url>/2022/04/28/%E8%BF%9B%E5%BA%97%E5%8D%B4%E6%9C%AA%E8%BF%9B%E8%A1%8C%E8%BF%87%E4%BA%A4%E6%98%93%E7%9A%84%E9%A1%BE%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="进店却未进行过交易的顾客"><a href="#进店却未进行过交易的顾客" class="headerlink" title="进店却未进行过交易的顾客"></a>进店却未进行过交易的顾客</h2><p>2022-04-26</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>表：<code>Visits</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span> Name <span class="operator">|</span> Type    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> visit_id    <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> customer_id <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line">visit_id 是该表的主键。</span><br><span class="line">该表包含有关光临过购物中心的顾客的信息。</span><br></pre></td></tr></table></figure><br>表：<code>Transactions</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span> Name    <span class="operator">|</span> Type    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+</span></span><br><span class="line"><span class="operator">|</span> transaction_id <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> visit_id       <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> amount         <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+</span></span><br><span class="line">transaction_id 是此表的主键。</span><br><span class="line">此表包含 visit_id 期间进行的交易的信息。</span><br></pre></td></tr></table></figure><br>有一些顾客可能光顾了购物中心但没有进行交易。请你编写一个 SQL 查询，来查找这些顾客的 ID ，以及他们只光顾不交易的次数。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--first version</span></span><br><span class="line"><span class="keyword">select</span> customer_id,<span class="built_in">count</span>(visit_id) count_no_trans</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> v.visit_id,v.customer_id</span><br><span class="line">    <span class="keyword">from</span> Visits v</span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> Transactions t</span><br><span class="line">    <span class="keyword">on</span> v.visit_id<span class="operator">=</span>t.visit_id</span><br><span class="line">    <span class="keyword">where</span> t.transaction_id <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line">) tt</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> customer_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> count_no_trans <span class="keyword">desc</span>;</span><br><span class="line"><span class="comment">--second version</span></span><br><span class="line"><span class="keyword">select</span> customer_id,<span class="built_in">count</span>(v.visit_id) <span class="keyword">as</span> count_no_trans</span><br><span class="line"><span class="keyword">from</span> Visits <span class="keyword">as</span> v</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Transactions <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">on</span> v.visit_id<span class="operator">=</span>t.visit_id</span><br><span class="line"><span class="keyword">where</span> t.Transaction_id <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> customer_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> count_no_trans;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="https://leetcode-cn.com/problems/customer-who-visited-but-did-not-make-any-transactions/submissions/">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E8%AE%A1%E7%AE%97%E7%89%B9%E6%AE%8A%E5%A5%96%E9%87%91/"/>
      <url>/2022/04/28/%E8%AE%A1%E7%AE%97%E7%89%B9%E6%AE%8A%E5%A5%96%E9%87%91/</url>
      
        <content type="html"><![CDATA[<h2 id="计算特殊奖金"><a href="#计算特殊奖金" class="headerlink" title="计算特殊奖金"></a>计算特殊奖金</h2><p>2022-04-23</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-------------+---------+</span><br><span class="line">| 列名        | 类型     |</span><br><span class="line">+-------------+---------+</span><br><span class="line">| employee_id | int     |</span><br><span class="line">| name        | varchar |</span><br><span class="line">| salary      | int     |</span><br><span class="line">+-------------+---------+</span><br><span class="line">employee_id 是这个表的主键。</span><br><span class="line">此表的每一行给出了雇员id ，名字和薪水。</span><br></pre></td></tr></table></figure><p>写出一个SQL 查询语句，计算每个雇员的奖金。如果一个雇员的id是奇数并且他的名字不是以’M’开头，那么他的奖金是他工资的100%，否则奖金为0。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#######<span class="number">1</span>########<span class="number">611</span>ms</span><br><span class="line"><span class="keyword">select</span> employee_id,</span><br><span class="line">if (employee_id<span class="operator">%</span><span class="number">2</span><span class="operator">!=</span><span class="number">0</span> <span class="keyword">and</span> name <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;M%&#x27;</span>,salary,<span class="number">0</span>) bonus </span><br><span class="line"><span class="keyword">from</span> Employees;</span><br><span class="line"></span><br><span class="line">#######<span class="number">2</span>#######<span class="number">570</span>ms</span><br><span class="line"><span class="keyword">select</span> employee_id,</span><br><span class="line">    <span class="keyword">case</span> </span><br><span class="line">        <span class="keyword">when</span> employee_id<span class="operator">%</span><span class="number">2</span><span class="operator">!=</span><span class="number">0</span> <span class="keyword">and</span> name <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;M%&#x27;</span> <span class="keyword">then</span> salary <span class="keyword">else</span> <span class="number">0</span> </span><br><span class="line">    <span class="keyword">end</span> bonus</span><br><span class="line"><span class="keyword">from</span> Employees;</span><br><span class="line">#########<span class="number">3</span>########<span class="number">619</span>ms</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> employee_id,</span><br><span class="line">    <span class="keyword">case</span> </span><br><span class="line">        <span class="keyword">when</span> employee_id<span class="operator">%</span><span class="number">2</span><span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="keyword">left</span>(name,<span class="number">1</span>)<span class="operator">!=</span><span class="string">&#x27;M&#x27;</span> </span><br><span class="line">        <span class="keyword">then</span> salary </span><br><span class="line">        <span class="keyword">else</span> <span class="number">0</span> </span><br><span class="line">    <span class="keyword">end</span> bonus</span><br><span class="line"><span class="keyword">from</span> Employees;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>if:可以放在select之后作为输出项，对输出进行条件筛选，基本语法为：<code>if(条件,Ture:输出1,FALSE:输出2) as name</code>。</li><li>case：作为select的输出项，对输出进行条件筛选，基本语法为:<code>case when 条件 then True:输出1 else FALSE：输出2 end name</code>。</li><li>除了可以用like ‘M%’判断字符串以M开头，还可以使用<code>left(字符串，location)</code>判断对应位置上的字母，例如<code>left(&#39;Mike&#39;,1)</code>。</li><li>同理可以用于其他情况如<code>update……set()</code>等</li></ul><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="https://leetcode-cn.com/problems/calculate-special-bonus/">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E6%82%A3%E6%9F%90%E7%A7%8D%E7%96%BE%E7%97%85%E7%9A%84%E6%82%A3%E8%80%85/"/>
      <url>/2022/04/28/%E6%82%A3%E6%9F%90%E7%A7%8D%E7%96%BE%E7%97%85%E7%9A%84%E6%82%A3%E8%80%85/</url>
      
        <content type="html"><![CDATA[<h2 id="患某种疾病的患者"><a href="#患某种疾病的患者" class="headerlink" title="患某种疾病的患者"></a>患某种疾病的患者</h2><p>2022-04-24</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span> Name  <span class="operator">|</span> Type    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+---------+</span></span><br><span class="line"><span class="operator">|</span> patient_id   <span class="operator">|</span> <span class="type">int</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> patient_name <span class="operator">|</span> <span class="type">varchar</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> conditions   <span class="operator">|</span> <span class="type">varchar</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+---------+</span></span><br><span class="line">patient_id （患者 ID）是该表的主键。</span><br><span class="line"><span class="string">&#x27;conditions&#x27;</span> （疾病）包含 <span class="number">0</span> 个或以上的疾病代码，以空格分隔。</span><br><span class="line">这个表包含医院中患者的信息。</span><br></pre></td></tr></table></figure><p>写一条 SQL 语句，查询患有 I 类糖尿病的患者 ID （patient_id）、患者姓名（patient_name）以及其患有的所有疾病代码（conditions）。I 类糖尿病的代码总是包含前缀 DIAB1 。</p><p>按 任意顺序 返回结果表。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> patient_id,patient_name,conditions</span><br><span class="line"><span class="keyword">from</span> Patients</span><br><span class="line"><span class="keyword">where</span> conditions <span class="keyword">like</span> <span class="string">&#x27;DIAB1%&#x27;</span> <span class="keyword">or</span> conditions <span class="keyword">like</span> <span class="string">&#x27;% DIAB1%&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>多条件[[sql条件运算#使用LIKE模糊查询|like]]:<code>where conditions like &#39;condition1&#39; or/and conditions like &#39;condition2&#39;</code></li><li><code>%</code>匹配：<code>%con</code>以con开头，<code>% con</code>以 con开头<h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><a href="https://leetcode-cn.com/problems/patients-with-a-condition/">source</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E6%8C%82%E7%A7%91%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E5%AD%A6%20II/"/>
      <url>/2022/04/28/%E6%8C%82%E7%A7%91%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E5%AD%A6%20II/</url>
      
        <content type="html"><![CDATA[<h2 id="挂科最多的同学-II"><a href="#挂科最多的同学-II" class="headerlink" title="挂科最多的同学 II"></a>挂科最多的同学 II</h2><p>2022-04-25</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p>描述<br><code>exams</code> 表中存放着同学们的考试记录<br>请用 SQL 语句，找到挂科数最多的同学所对应的 <code>student_id</code></p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student_id</span><br><span class="line"><span class="keyword">FROM</span> exams</span><br><span class="line"><span class="keyword">WHERE</span> is_pass <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> student_id</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">=</span>(</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="built_in">max</span>(bb.a)</span><br><span class="line">     <span class="keyword">FROM</span> (</span><br><span class="line">          <span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> a</span><br><span class="line">          <span class="keyword">FROM</span> exams <span class="keyword">WHERE</span> is_pass<span class="operator">=</span><span class="number">0</span> <span class="keyword">group</span> <span class="keyword">by</span> student_id</span><br><span class="line">     ) <span class="keyword">as</span> bb</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2</span></span><br><span class="line"><span class="keyword">SELECT</span> student_id <span class="keyword">FROM</span>(</span><br><span class="line">     <span class="keyword">SELECT</span> student_id,is_pass,<span class="built_in">count</span>(is_pass) num</span><br><span class="line">     <span class="keyword">FROM</span> exams</span><br><span class="line">     <span class="keyword">WHERE</span> is_pass<span class="operator">=</span><span class="number">0</span></span><br><span class="line">     <span class="keyword">group</span> <span class="keyword">by</span> student_id</span><br><span class="line">) t</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> num<span class="operator">=</span>(</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="built_in">max</span>(num) <span class="keyword">FROM</span>(</span><br><span class="line">     <span class="keyword">SELECT</span> student_id,is_pass,<span class="built_in">count</span>(is_pass) num</span><br><span class="line">     <span class="keyword">FROM</span> exams</span><br><span class="line">     <span class="keyword">WHERE</span> is_pass<span class="operator">=</span><span class="number">0</span></span><br><span class="line">     <span class="keyword">group</span> <span class="keyword">by</span> student_id</span><br><span class="line">     ) tt</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>where后不可以跟[[函数#算数函数|聚合函数]]</li></ul><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><p><a href="https://www.lintcode.com/problem/1933/solution/45386">source</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/28/%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4/"/>
      <url>/2022/04/28/%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="第二高的薪水"><a href="#第二高的薪水" class="headerlink" title="第二高的薪水"></a>第二高的薪水</h2><p>2022-04-25</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><p><code>Employee</code> 表：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-------------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span> Name <span class="operator">|</span> Type <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> salary      <span class="operator">|</span> <span class="type">int</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+------+</span></span><br><span class="line">id 是这个表的主键。</span><br><span class="line">表的每一行包含员工的工资信息。</span><br></pre></td></tr></table></figure><br>编写一个 SQL 查询，获取并返回 <code>Employee</code> 表中第二高的薪水 。如果不存在第二高的薪水，查询应该返回 <code>null</code> 。</p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--first version</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">max</span>(Salary) SecondHighestSalary</span><br><span class="line"><span class="keyword">FROM</span> Employee  </span><br><span class="line"><span class="keyword">where</span> Salary <span class="operator">!=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(Salary) <span class="keyword">from</span> Employee );</span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">    Salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    Employee</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">1</span> <span class="keyword">OFFSET</span> <span class="number">1</span></span><br><span class="line">) <span class="keyword">AS</span> SecondHighestSalary</span><br><span class="line"><span class="comment">--使用select输出，否则当不存在第二高时候输出为空而不是null</span></span><br><span class="line"><span class="keyword">SELECT</span> (</span><br><span class="line">       <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line">       <span class="keyword">FROM</span> Employee</span><br><span class="line">       <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span></span><br><span class="line">       LIMIT <span class="number">1</span>,<span class="number">1</span></span><br><span class="line">) SecondHighestSalary;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li><code>limit m,n</code>：m为跳过的数据数量，n为要取的数据数量。</li><li><code>limit m</code>：m为要取的数据数量</li><li><code>limit m offset n</code>：m为要取的数据数量，n为跳过的数据数量<br>[[sql条件运算#使用 LIMIT 限制输出行数|limit基础]]<h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><a href="https://leetcode-cn.com/problems/second-highest-salary/">source</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL</title>
      <link href="/2022/04/28/SQL/"/>
      <url>/2022/04/28/SQL/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h1><h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><blockquote><p>基本语法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> `column_name`</span><br><span class="line"><span class="keyword">FROM</span> `table_name`;</span><br></pre></td></tr></table></figure><blockquote><p>使用<code>DISTINCT</code>使查询不重复<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `column_name`</span><br><span class="line"><span class="keyword">FROM</span> `table_name`</span><br></pre></td></tr></table></figure></p><p><code>SELECT WHERE</code> 语句是筛选查询很重要的操作，<code>WHERE</code> 关键字后面加上条件可以过滤掉我们不需要的信息，对查询效率有着很大的提高。<br>在使用 <code>SELECT WHERE</code> 语句检索表数据时，需要给出检索的表名 (table_name)、检索的列名 (column_name) 和操作符 (operator) 。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> `column_name1`,`column_name2`…</span><br><span class="line"><span class="keyword">FROM</span> `table_name`</span><br><span class="line"><span class="keyword">WHERE</span> `column_name` operator `<span class="keyword">value</span>`;</span><br></pre></td></tr></table></figure><ul><li>column_name 对应指定列的名称，或者是多列，用逗号（ <code>,</code> ）分隔开</li><li>table_name 对应查询表的名称</li><li><p>operator 为操作符![[sql条件运算#比较运算符]]，常用的有等于 <code>=</code> 、小于 <code>&lt;</code> 、大于 <code>&gt;</code> 、不等于<code>&lt;&gt;</code> 或 <code>!=</code>。</p><blockquote><p>select后面要输出的信息如果是全部信息就跟*就可以， from后都是跟上来自哪个表 where就是后面跟的就是条件，记得非数字的加上单引号就可以了。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span><span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> courses</span><br><span class="line"><span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;Artificial Intelligence&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h2><blockquote><p><strong>INSERT INTO</strong> 语句用于向表中插入新记录，这边介绍两种编写形式，第一种形式无需指定列名，第二种形式需要指定列名。</p></blockquote><h3 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h3><blockquote><p>第一种形式，<code>不需要指定列名</code>。只需提供插入的数据即可。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `table_name`</span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, value3,...);</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `courses` <span class="keyword">VALUES</span> (<span class="number">13</span>,<span class="string">&#x27;Python&#x27;</span>,<span class="string">&#x27;400&#x27;</span>,<span class="string">&#x27;2021-05-23&#x27;</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h3 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h3><blockquote><p>这种形式需要指定列名，语法如下：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `table_name`</span><br><span class="line">(`column1`, `column2`, `column3`,...)</span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, value3,...);</span><br></pre></td></tr></table></figure><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `courses` (`name`, `student_count`, `created_at`, `teacher_id`) <span class="keyword">VALUES</span> (<span class="string">&#x27;Flash Sale&#x27;</span>,<span class="string">&#x27;100&#x27;</span>,<span class="string">&#x27;2018-01-01&#x27;</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><blockquote><p>基本语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `table_name`</span><br><span class="line"><span class="keyword">SET</span> `column1`<span class="operator">=</span>value1,`column2`<span class="operator">=</span>value2,...</span><br><span class="line"><span class="keyword">WHERE</span> `some_column`<span class="operator">=</span>some_value;</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `teachers`</span><br><span class="line"><span class="keyword">SET</span> `email` <span class="operator">=</span> <span class="string">&#x27;LinghuChong@lintcode.com&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> `name` <span class="operator">=</span> <span class="string">&#x27;Linghu Chong&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><blockquote><p>基本语法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `table_name`</span><br><span class="line"><span class="keyword">WHERE</span> `some_column` <span class="operator">=</span> `some_value`;</span><br></pre></td></tr></table></figure><h4 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `courses` <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;Dynamic Programming&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> courses;</span><br></pre></td></tr></table></figure><h4 id="delete和truncate的区别"><a href="#delete和truncate的区别" class="headerlink" title="delete和truncate的区别"></a>delete和truncate的区别</h4><p>1、在功能上，truncate是清空一个表的内容，它相当于delete from table_name。<br>2、delete是dml操作，truncate是ddl操作；因此，用delete删除整个表的数据时，会产生大量的roolback，占用很多的rollback segments， 而truncate不会。<br>3、在内存中，用delete删除数据，表空间中其被删除数据的表占用的空间还在，便于以后的使用，另外它是“假相”的删除，相当于windows中用delete删除数据是把数据放到回收站中，还可以恢复，当然如果这个时候重新启动系统（OS或者RDBMS），它也就不能恢复了！<br>而用truncate清除数据，内存中表空间中其被删除数据的表占用的空间会被立即释放，相当于windows中用shift+delete删除数据，不能够恢复！<br>4、truncate 调整high water mark 而delete不；truncate之后，TABLE的HWM退回到 INITIAL和NEXT的位置（默认）delete 则不可以。<br>5、truncate 只能对TABLE，delete 可以是table,view,synonym。<br>6、TRUNCATE TABLE 的对象必须是本模式下的，或者有drop any table的权限 而 DELETE 则是对象必须是本模式下的，或被授予 DELETE ON SCHEMA.TABLE 或DELETE ANY TABLE的权限。<br>7、在外层中，truncate或者delete后，其占用的空间都将释放。<br>8、truncate和delete只删除数据，而drop则删除整个表（结构和数据）。</p><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><p>1.TRUNCATE TABLE是非常快的<br>2.TRUNCATE之后的自增字段从头开始计数了，而DELETE的仍保留原来的最大数值 </p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/28/hello-world/"/>
      <url>/2022/04/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>按日期分组销售产品</title>
      <link href="/2022/04/28/%E6%8C%89%E6%97%A5%E6%9C%9F%E5%88%86%E7%BB%84%E9%94%80%E5%94%AE%E4%BA%A7%E5%93%81/"/>
      <url>/2022/04/28/%E6%8C%89%E6%97%A5%E6%9C%9F%E5%88%86%E7%BB%84%E9%94%80%E5%94%AE%E4%BA%A7%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h2 id="按日期分组销售产品"><a href="#按日期分组销售产品" class="headerlink" title="按日期分组销售产品"></a>按日期分组销售产品</h2><p>2022-04-24</p><h4 id="🙈Introduction"><a href="#🙈Introduction" class="headerlink" title="🙈Introduction"></a>🙈Introduction</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> 列名         <span class="operator">|</span> 类型    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line"><span class="operator">|</span> sell_date   <span class="operator">|</span> <span class="type">date</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> product     <span class="operator">|</span> <span class="type">varchar</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+</span></span><br><span class="line">此表没有主键，它可能包含重复项。</span><br><span class="line">此表的每一行都包含产品名称和在市场上销售的日期。</span><br></pre></td></tr></table></figure><p>编写一个 SQL 查询来查找每个日期、销售的不同产品的数量及其名称。<br>每个日期的销售产品名称应按词典序排列。<br>返回按 sell_date 排序的结果表。<br>查询结果格式如下例所示。<br><span id="more"></span></p><h4 id="🤔code"><a href="#🤔code" class="headerlink" title="🤔code"></a>🤔code</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sell_date,<span class="built_in">count</span>(<span class="keyword">distinct</span> product) num_sold,group_concat(<span class="keyword">distinct</span> product) products</span><br><span class="line"><span class="keyword">from</span> Activities</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sell_date</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sell_date <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><h4 id="💪get"><a href="#💪get" class="headerlink" title="💪get"></a>💪get</h4><ul><li>[[函数#使用 COUNT 函数计数|count()]]聚合函数搭配<code>group</code>使用，实现分组计数。</li><li><code>group_concat</code>对分组内容进行拼接，若不拼接直接输出为第一个值。<br>concat和group_concat的区别：</li></ul><ol><li>concat是针对以行数据做的拼接，而group_concat是针对列做的数据拼接，且group_concat自动生成逗号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--concat</span></span><br><span class="line"><span class="keyword">select</span> concat(id, &quot;,&quot;, classId) <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="comment">--group_concat</span></span><br><span class="line"><span class="comment">--一般与group by结合使用</span></span><br><span class="line"><span class="keyword">select</span> group_concat(username) <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">group</span> <span class="keyword">by</span> classId;</span><br></pre></td></tr></table></figure><h4 id="🙃source"><a href="#🙃source" class="headerlink" title="🙃source"></a>🙃source</h4><a href="https://leetcode-cn.com/problems/group-sold-products-by-the-date/">source</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
